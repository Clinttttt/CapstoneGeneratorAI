@*@page "/"

@inject HttpClient Http
@rendermode InteractiveServer
@using CapstoneGeneratorAI.Client.Services
@using CapstoneGeneratorAI.Domain.DTOs
@using CapstoneGeneratorAI.Domain.Interface
@using static CapstoneGeneratorAI.Domain.Enums.Industry
@inject PromptClient promptClient

<h3>Choose Industry</h3>
<select @bind="request.industry">
    <!-- @foreach (Industry_Options industry in Enum.GetValues(typeof(Industry_Options)))
    {
         <option value="@industry">@industry</option>
    }-->
    <option value="@Industry_Options.Agriculture">Agriculture</option>
    <option value="@Industry_Options.Healthcare">Health Care</option>
</select>

<h3>Choose Project Type</h3>
<select @bind="request.type">
    <!--@foreach (Project_Type type in Enum.GetValues(typeof(Project_Type)))
    {
        <option value="@type">@type</option>
    }-->
    <option value="@Project_Type.Web_App">Web Application</option>
</select>

<br />

<button @onclick="Generate">Generate</button>

@if (datas is not null)
{
    <h1>title:@datas.Title</h1>
    <h1>description:@datas.Description</h1>
    <h1>Features:</h1>
    foreach (var d in datas.Features!.Take(5)!)
    {

        <li>@d</li>
    }
}
else
{
    <h1>null</h1> 
}

@code {
    public ResponseDTO? datas { get; set; }
    public RequestDTO request { get; set; } = new RequestDTO();

    private async Task Generate()
    {
        datas = await promptClient.AskAsync(request);
    }
}*@



@page "/"
@*<div class="relative">
    <div class="justify-center flex top-8 ">
        <h1 class="text-2xl self-center">Capstone Generator</h1>
    </div>
</div>
<div class="relative items-center justify-center flex flex-row h-screen gap-5 justify-around">

    <div class="flex flex-row w-sm  h-[60%] border border-black ">

    </div>


    <div class="flex flex-row w-lg  h-[60%] border border-black ">
    </div>

</div>*@

@inject HttpClient Http
@rendermode InteractiveServer
@using CapstoneGeneratorAI.Client.Services
@using CapstoneGeneratorAI.Domain.DTOs
@using CapstoneGeneratorAI.Domain.Interface
@using static CapstoneGeneratorAI.Domain.Enums.Industry
@inject PromptClient promptClient






<div class="mt-3 sm:mt-3 lg:mt-8 absolute text-center  top-0 left-1/2 transform -translate-x-1/2">
    <h1 class="text-md sm:text-2xl lg:text-4xl font-bold  bg-gradient-to-b from-neutral-600 to-stone-950 bg-clip-text text-transparent ">Capstone Generator</h1>
    <h4 class="text-xs font-light sm:text-md lg:text-lg text-neutral my-1">Find your perfect capstone idea today!</h4>
</div>


<div class="my-6 sm:my-3 lg:my-9 flex flex-col lg:flex-row  gap-5 sm:gap-10  flex  items-center justify-center h-screen  justify-around ">




    <div class="h-[35%] sm:h-[35%] w-[93%] md:h-[35%] lg:h-[48%] lg:w-[33%] border border-black relative rounded-md bg-base-100" style="border: solid 1px rgba(0,0,0,0.2)">
        <div class="top-4 left-4 p-4 w-full">
            <h1 class="text-lg font-semibold my-2 text-neutral">Filters</h1>

            <select @bind="request.industry" class=" select select-accent !w-full my-1" style="border: solid 1px rgba(0,0,0,0.2)">
                <option value="@Industry_Options.All" selected>All Industries</option>
                <option value="@Industry_Options.Agriculture">Agriculture</option>
                <option value="@Industry_Options.Business">Business</option>
                <option value="@Industry_Options.Cybersecurity">Cyber Security</option>
                <option value="@Industry_Options.Healthcare">Health Care</option>
                <option value="@Industry_Options.Agriculture">Agriculture</option>
                <option value="@Industry_Options.Entertainment">Entertainment</option>
                <option value="@Industry_Options.Education">Education</option>
                <option value="@Industry_Options.Energy">Energy</option>
                <option value="@Industry_Options.Government">Government</option>

            </select>
            <h1 class="text-lg font-semibold my-2 text-neutral">Project Type</h1>
            <select @bind="request.type" class=" select select-accent !w-full my-1" style="border: solid 1px rgba(0,0,0,0.2)">
                <option value="@Project_Type.All" selected>All Project Types</option>
                <option value="@Project_Type.Data_App">Data Application</option>
                <option value="@Project_Type.Web_App">Web Application</option>
                <option value="@Project_Type.Desktop_App">Desktop Application</option>
                <option value="@Project_Type.Mobile_App">Mobile Application</option>
                <option value="@Project_Type.AI_App">AI Application</option>
                <option value="@Project_Type.IoT_App">IOT Application</option>

            </select>
            <div class="justify-center flex w-full my-4 ">
                <button @onclick="Generate" class="btn btn-wide btn-accent  text-md focus:outline-none focus:ring-2 focus:ring-accent">Generate Ideas</button>
            </div>
        </div>
    </div>

    @if (datas is not null)
    {
        <div class=" h-[48%] sm:h-[43%] w-[93%] md:h-[42%] lg:h-[62%] lg:w-[40%] border border-black  rounded-md bg-base-100 relative overflow-auto scrollbar-hide" style="border: solid 1px rgba(0,0,0,0.2)">
            <div class="justify-center flex flex-col p-3">
                <h1 class="text-2xl font-bold my-2 text-neutral ">@datas.Title</h1>
                <div class="my-2">
                    <p style="color:rgb(101, 110, 123)">@datas.Description</p>
                </div>
                <h1 class="text-lg font-semibold my-2 text-accent ">Features</h1>
                @foreach (var d in datas.Features!.Take(5)!)
                {
                    <ul>

                        <li class="text-neutral">@d</li>
                    </ul>
                }

            </div>
            <div class="justify-end items-end p-3 flex">
                <button @onclick="Generate" class="btn btn-accent  max-w-fit rounded-sm focus:outline-none focus:ring-2 focus:ring-accent">
                    Next Idea <svg class="w-[25px] h-[25px] text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 5 7 7-7 7" />
                    </svg>
                </button>
            </div>
        </div>

    }else{
        <div class=" h-[48%] sm:h-[43%] w-[93%] md:h-[42%] lg:h-[62%] lg:w-[40%] border border-black  rounded-md bg-base-100 relative overflow-auto items-center flex justify-center " style="border: solid 1px rgba(0,0,0,0.2)">

            <h1 style="color:rgb(155, 161, 170)">Your capstone ideas will appear here</h1>
 
        </div>
    }

</div>


@code {
    public ResponseDTO? datas { get; set; }
    public RequestDTO request { get; set; } = new RequestDTO();

    private async Task Generate()
    {
        datas = await promptClient.AskAsync(request);
    }
}